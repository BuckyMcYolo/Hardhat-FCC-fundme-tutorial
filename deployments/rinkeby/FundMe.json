{
  "address": "0x1881C4907f8EF9dF7138E331d8cBBE17EAb66A8C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x12a16b92b7cb142ba8b4e7c90576ac926a59cd35edd1319d4f3e9267c1959962",
  "receipt": {
    "to": null,
    "from": "0xBda68578dA0E29af81CB4Bd3C1E3C6760a6ba942",
    "contractAddress": "0x1881C4907f8EF9dF7138E331d8cBBE17EAb66A8C",
    "transactionIndex": 7,
    "gasUsed": "854259",
    "logsBloom": "0x
    "blockHash": "0xda2e50b31c28417ea553f988621309bc21364d9eb6093bb019a6fcf33925949f",
    "transactionHash": "0x12a16b92b7cb142ba8b4e7c90576ac926a59cd35edd1319d4f3e9267c1959962",
    "logs": [],
    "blockNumber": 10911724,
    "cumulativeGasUsed": "1756789",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "f917fb81910e1f08ce9872ca723a7a11",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n//Get funds from users\\n//Withdraw funds\\n//Set a minumum funding value in Dollars\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  //using constant in a state variable optimizes for gas costs(basically bc it compiles right at deploy time)\\n  uint256 public constant minimumUSD = 50 * 1e18;\\n\\n  address[] public funders;\\n  mapping(address => uint256) public addressToAmountFunded;\\n\\n  address public immutable owner;\\n\\n  AggregatorV3Interface public priceFeed;\\n\\n  constructor(address priceFeedAddress) {\\n    owner = msg.sender;\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    //Want to be able to send a min fund amount in USD\\n    require(\\n      msg.value.getConversionRate(priceFeed) >= minimumUSD,\\n      \\\"Didn't send enough\\\"\\n    );\\n    funders.push(msg.sender);\\n    addressToAmountFunded[msg.sender] = msg.value;\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    //reset funders balance to 0\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      addressToAmountFunded[funder];\\n    }\\n    // reset the array\\n    funders = new address[](0);\\n    //withdraw the funds\\n\\n    //transfer\\n    //payable(msg.sender).transfer(address(this).balance);\\n    //send\\n    //bool sendSuccess= payable(msg.sender).send(address(this).balance);\\n    //require(sendSuccess, \\\"Send Failed\\\");\\n    //call\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call Failed\\\");\\n  }\\n\\n  modifier onlyOwner() {\\n    //require (msg.sender == owner);\\n\\n    if (msg.sender != owner) {\\n      revert NotOwner();\\n    }\\n    _;\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n}\\n\",\"keccak256\":\"0xe9de8b4a661b33cd6f90b9332fa3faf70ca162a251fbf28ca421da14c4e265d9\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\"; // got from chainlink github\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    //ETH in USD\\n    return uint256(price * 1e10);\\n  }\\n\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n    return ethAmountInUSD;\\n  }\\n}\\n\",\"keccak256\":\"0xb7c88940cb0c833502761b41e6fef8dbddc1c272153b01eb024039cb7e4c98fb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f78380380610f7883398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e13610165600039600081816102e1015261055a0152610e136000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633430a88c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af9190610757565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107d5565b61051a565b6040516101039190610757565b60405180910390f35b34801561011857600080fd5b50610121610532565b60405161012e9190610861565b60405180910390f35b34801561014357600080fd5b5061014c610558565b604051610159919061088b565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108d2565b61057c565b6040516101a0919061088b565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bb90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040a5760008082815481106103895761038861097c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002050508080610402906109da565b915050610367565b50600067ffffffffffffffff81111561042657610425610a23565b5b6040519080825280602002602001820160405280156104545781602001602082028036833780820191505090505b506000908051906020019061046a929190610697565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049190610a83565b60006040518083038185875af1925050503d80600081146104ce576040519150601f19603f3d011682016040523d82523d6000602084013e6104d3565b606091505b5050905080610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610ae4565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c7836105f7565b90506000670de0b6b3a764000085836105e09190610b04565b6105ea9190610b8d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610c4b565b5050509150506402540be4008161068f9190610cc6565b915050919050565b828054828255906000526020600020908101928215610710579160200282015b8281111561070f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b7565b5b50905061071d9190610721565b5090565b5b8082111561073a576000816000905550600101610722565b5090565b6000819050919050565b6107518161073e565b82525050565b600060208201905061076c6000830184610748565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a282610777565b9050919050565b6107b281610797565b81146107bd57600080fd5b50565b6000813590506107cf816107a9565b92915050565b6000602082840312156107eb576107ea610772565b5b60006107f9848285016107c0565b91505092915050565b6000819050919050565b600061082761082261081d84610777565b610802565b610777565b9050919050565b60006108398261080c565b9050919050565b600061084b8261082e565b9050919050565b61085b81610840565b82525050565b60006020820190506108766000830184610852565b92915050565b61088581610797565b82525050565b60006020820190506108a0600083018461087c565b92915050565b6108af8161073e565b81146108ba57600080fd5b50565b6000813590506108cc816108a6565b92915050565b6000602082840312156108e8576108e7610772565b5b60006108f6848285016108bd565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006109466012836108ff565b915061095182610910565b602082019050919050565b6000602082019050818103600083015261097581610939565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e58261073e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1857610a176109ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6d600083610a52565b9150610a7882610a5d565b600082019050919050565b6000610a8e82610a60565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ace600b836108ff565b9150610ad982610a98565b602082019050919050565b60006020820190508181036000830152610afd81610ac1565b9050919050565b6000610b0f8261073e565b9150610b1a8361073e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5357610b526109ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b988261073e565b9150610ba38361073e565b925082610bb357610bb2610b5e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bdd81610bbe565b8114610be857600080fd5b50565b600081519050610bfa81610bd4565b92915050565b6000819050919050565b610c1381610c00565b8114610c1e57600080fd5b50565b600081519050610c3081610c0a565b92915050565b600081519050610c45816108a6565b92915050565b600080600080600060a08688031215610c6757610c66610772565b5b6000610c7588828901610beb565b9550506020610c8688828901610c21565b9450506040610c9788828901610c36565b9350506060610ca888828901610c36565b9250506080610cb988828901610beb565b9150509295509295909350565b6000610cd182610c00565b9150610cdc83610c00565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1b57610d1a6109ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5857610d576109ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9557610d946109ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd257610dd16109ab565b5b82820290509291505056fea2646970667358221220d66fd1eee282791c762e30ea1d845a392476c9328602add33e4e25df2286b57664736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633430a88c1461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b6040516100af9190610757565b60405180910390f35b3480156100c457600080fd5b506100cd6102df565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107d5565b61051a565b6040516101039190610757565b60405180910390f35b34801561011857600080fd5b50610121610532565b60405161012e9190610861565b60405180910390f35b34801561014357600080fd5b5061014c610558565b604051610159919061088b565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108d2565b61057c565b6040516101a0919061088b565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bb90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061095c565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610364576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040a5760008082815481106103895761038861097c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002050508080610402906109da565b915050610367565b50600067ffffffffffffffff81111561042657610425610a23565b5b6040519080825280602002602001820160405280156104545781602001602082028036833780820191505090505b506000908051906020019061046a929190610697565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049190610a83565b60006040518083038185875af1925050503d80600081146104ce576040519150601f19603f3d011682016040523d82523d6000602084013e6104d3565b606091505b5050905080610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90610ae4565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c7836105f7565b90506000670de0b6b3a764000085836105e09190610b04565b6105ea9190610b8d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064057600080fd5b505afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610c4b565b5050509150506402540be4008161068f9190610cc6565b915050919050565b828054828255906000526020600020908101928215610710579160200282015b8281111561070f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106b7565b5b50905061071d9190610721565b5090565b5b8082111561073a576000816000905550600101610722565b5090565b6000819050919050565b6107518161073e565b82525050565b600060208201905061076c6000830184610748565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a282610777565b9050919050565b6107b281610797565b81146107bd57600080fd5b50565b6000813590506107cf816107a9565b92915050565b6000602082840312156107eb576107ea610772565b5b60006107f9848285016107c0565b91505092915050565b6000819050919050565b600061082761082261081d84610777565b610802565b610777565b9050919050565b60006108398261080c565b9050919050565b600061084b8261082e565b9050919050565b61085b81610840565b82525050565b60006020820190506108766000830184610852565b92915050565b61088581610797565b82525050565b60006020820190506108a0600083018461087c565b92915050565b6108af8161073e565b81146108ba57600080fd5b50565b6000813590506108cc816108a6565b92915050565b6000602082840312156108e8576108e7610772565b5b60006108f6848285016108bd565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006109466012836108ff565b915061095182610910565b602082019050919050565b6000602082019050818103600083015261097581610939565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e58261073e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1857610a176109ab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a6d600083610a52565b9150610a7882610a5d565b600082019050919050565b6000610a8e82610a60565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ace600b836108ff565b9150610ad982610a98565b602082019050919050565b60006020820190508181036000830152610afd81610ac1565b9050919050565b6000610b0f8261073e565b9150610b1a8361073e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5357610b526109ab565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b988261073e565b9150610ba38361073e565b925082610bb357610bb2610b5e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bdd81610bbe565b8114610be857600080fd5b50565b600081519050610bfa81610bd4565b92915050565b6000819050919050565b610c1381610c00565b8114610c1e57600080fd5b50565b600081519050610c3081610c0a565b92915050565b600081519050610c45816108a6565b92915050565b600080600080600060a08688031215610c6757610c66610772565b5b6000610c7588828901610beb565b9550506020610c8688828901610c21565b9450506040610c9788828901610c36565b9350506060610ca888828901610c36565b9250506080610cb988828901610beb565b9150509295509295909350565b6000610cd182610c00565b9150610cdc83610c00565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1b57610d1a6109ab565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5857610d576109ab565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9557610d946109ab565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd257610dd16109ab565b5b82820290509291505056fea2646970667358221220d66fd1eee282791c762e30ea1d845a392476c9328602add33e4e25df2286b57664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}